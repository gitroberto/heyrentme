<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Symfony\Component\Filesystem\Filesystem;

/**
 * BlogRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BlogRepository extends EntityRepository
{    
    public function getAllOrderedByPosition() {
        $q = "select c from AppBundle:Blog c order by c.position asc";
        return $this->getEntityManager()->createQuery($q)->getResult();
    }
    
    public function getByPosition($position) {
        $q = "select b from AppBundle:Blog b where b.position = :position";
        return $this->getEntityManager()->createQuery($q)->setParameter('position', $position)->getOneOrNullResult();
    }
    
    public function getBySlug($slug) {
        $dql = 'select b from AppBundle:Blog b where b.slug = :slug';
        return $this->getEntityManager()->createQuery($dql)->setParameter(':slug', $slug)->getOneOrNullResult();
    }
    
    public function countAll() {
        return $this->createQueryBuilder('c')
            ->select('count(c.id)')
            ->getQuery()
            ->getSingleScalarResult();
    }
    
    public function getGridOverview($sortColumn, $sortDirection, $pageSize, $page) {
        $qb = $this->getEntityManager()->createQueryBuilder();
        // build query
        $qb->select('b')
            ->from('AppBundle:Blog', 'b');
        // sort by
        if (!empty($sortColumn)) {
            if (!empty($sortDirection)) {
                $qb->orderBy($sortColumn, $sortDirection);
            }
            else {
                $qb->orderBy($sortColumn);
            }
        }

        $q = $qb->getQuery();
        // page and page size
        if (!empty($pageSize)) {
            $q->setMaxResults($pageSize);
        }
        if (!empty($page) && $page != 1) {
            $q->setFirstResult(($page - 1) * $pageSize);
        }
        return $q->getResult();        
    }
    
    public function isSlugUnique($slug, $blogId = null) {
        $dql = 'select count(b.id) from AppBundle:Blog b where b.slug = :slug';
        if ($blogId != null) {
            $dql = $dql . ' and b.id != :blogId';
        }
        $q = $this->getEntityManager()->createQuery($dql);
        $q->setParameter(':slug', $slug);
        if ($blogId != null) {
            $q->setParameter(':blogId', $blogId);
        }
        return $q->getSingleScalarResult() == 0;
    }
}
