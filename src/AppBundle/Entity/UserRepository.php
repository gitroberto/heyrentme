<?php

namespace AppBundle\Entity;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository
{
    public function getGridOverview($sortColumn, $sortDirection, $pageSize, $page, $email, $name, $surname, $enabled, $createdAt, $modifiedAt) {
        $qb = $this->getEntityManager()->createQueryBuilder();
        // build query
        $qb->select('u')
            ->from('AppBundle:User', 'u');   
        // where
        if (!empty($email)) {
            $qb->andWhere($qb->expr()->like('u.username', ':email'));
        }
        if (!empty($name)) {
            $qb->andWhere($qb->expr()->like('u.name', ':name'));
        }
        if (!empty($surname)) {
            $qb->andWhere($qb->expr()->like('u.surname', ':surname'));
        }
        
        if (!empty($enabled)) {
            $qb->andWhere($qb->expr()->like('u.enabled', ':enabled'));
        }
        
        if (!empty($createdAt)) {
            $qb->andWhere($qb->expr()->like('u.createdAt', ':createdAt'));
        }
        
        if (!empty($modifiedAt)) {
            $qb->andWhere($qb->expr()->like('u.modifiedAt', ':modifiedAt'));
        }
        
        // sort by
        if (!empty($sortColumn)) {
            if (!empty($sortDirection)) {
                $qb->orderBy($sortColumn, $sortDirection);
            }
            else {
                $qb->orderBy($sortColumn);
            }
        }

        $q = $qb->getQuery();
        // set params
        
        
        if (!empty($email)) {
            $q->setParameter(':email', "%{$email}%");
        }
        if (!empty($name)) {
            $q->setParameter(':name', "%{$name}%");
        }
        if (!empty($surname)) {
            $q->setParameter(':surname', "%{$surname}%");
        }
        if (!empty($enabled)) {
            $q->setParameter(':enabled', "%{$enabled}%");
        }
        if (!empty($createdAt)) {
            $q->setParameter(':createdAt', "%{$createdAt}%");
        }
        if (!empty($modifiedAt)) {
            $q->setParameter(':modifiedAt', "%{$modifiedAt}%");
        }
        
        
        
        
        // page and page size
        if (!empty($pageSize)) {
            $q->setMaxResults($pageSize);
        }
        if (!empty($page) && $page != 1) {
            $q->setFirstResult(($page - 1) * $pageSize);
        }
        return $q->getResult();        
    }
    public function countAll() {
        return $this->createQueryBuilder('u')
            ->select('count(u.id)')
            ->getQuery()
            ->getSingleScalarResult();
    }   
}
