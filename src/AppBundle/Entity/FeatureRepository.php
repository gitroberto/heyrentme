<?php

namespace AppBundle\Entity;

/**
 * FeatureRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FeatureRepository extends \Doctrine\ORM\EntityRepository
{
    public function getGridOverview($sortColumn, $sortDirection, $pageSize, $page, $featureSectionId) {
        $qb = $this->getEntityManager()->createQueryBuilder();
        // build query
        $qb->select(array('f', 'fs'))
            ->from('AppBundle:Feature', 'f')
            ->join('f.featureSection', 'fs');
        // where
        $qb->andWhere("fs.id = :fsId");
        
        if (!empty($fSubcategory)) {
            $qb->andWhere($qb->expr()->like('s.name', ':sname'));
        }
        if (!empty($fName)) {
            $qb->andWhere($qb->expr()->like('fs.name', ':fsname'));
        }
        // sort by
        if (!empty($sortColumn)) {
            if (!empty($sortDirection)) {
                $qb->orderBy($sortColumn, $sortDirection);
            }
            else {
                $qb->orderBy($sortColumn);
            }
        }

        $q = $qb->getQuery();
        $q->setParameter(':fsId', $featureSectionId);
        // set params
        if (!empty($fSubcategory)) {
            $q->setParameter(':sname', "%{$fSubcategory}%");
        }
        if (!empty($fName)) {
            $q->setParameter(':fsname', "%{$fName}%");
        }
        // page and page size
        if (!empty($pageSize)) {
            $q->setMaxResults($pageSize);
        }
        if (!empty($page) && $page != 1) {
            $q->setFirstResult(($page - 1) * $pageSize);
        }
        return $q->getResult();        
    }
    public function countAll() {
        return $this->createQueryBuilder('fs')
            ->select('count(fs.id)')
            ->getQuery()
            ->getSingleScalarResult();
    }  
}
