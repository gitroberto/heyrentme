<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Symfony\Component\Filesystem\Filesystem;

/**
 * BlogRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SubscriberRepository extends EntityRepository {
    
    public function countAll() {
        return $this->createQueryBuilder('s')
            ->select('count(s.id)')
            ->getQuery()
            ->getSingleScalarResult();
    }

    public function getGridOverview($sortColumn, $sortDirection, $pageSize, $page, $sConfirmed, $sUnsubscribed) {
        // count
        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb->select('count(s.id)')
            ->from('AppBundle:Subscriber', 's');
        $this->gridOverviewParams($qb, $sConfirmed, $sUnsubscribed);
        $count = $qb->getQuery()->getSingleScalarResult();

        // result
        $qb = $this->getEntityManager()->createQueryBuilder();
        // build query
        $qb->select('s')
            ->from('AppBundle:Subscriber', 's');
        $this->gridOverviewParams($qb, $sConfirmed, $sUnsubscribed);
        // sort by
        if (!empty($sortColumn)) {
            if (!empty($sortDirection))
                $qb->orderBy($sortColumn, $sortDirection);
            else
                $qb->orderBy($sortColumn);
        }

        $q = $qb->getQuery();
        // page and page size
        if (!empty($pageSize))
            $q->setMaxResults($pageSize);
        if (!empty($page) && $page != 1)
            $q->setFirstResult(($page - 1) * $pageSize);

        $rows = $q->getResult();        

        return array('count' => $count, 'rows' => $rows);
    }
    private function gridOverviewParams($qb, $sConfirmed, $sUnsubscribed) {
        if ($sConfirmed !== null) {
            $qb->andWhere('s.confirmed = :confirmed');
            $qb->setParameter('confirmed', $sConfirmed);
        }
        if ($sUnsubscribed !== null) {
            $qb->andWhere('s.unsubscribed = :unsubscribed');
            $qb->setParameter('unsubscribed', $sUnsubscribed);
        }
    }
}
